{{- range untilStep 0 (int .Values.statefulset.count) 1 }}

{{ if and ($.Values.volumeClaimTemplates.data.enabled) ($.Values.volumeClaimTemplates.data.volumeIds) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-axonserver-{{ . }}
  labels:
    identifier: data-axonserver-{{ . }}
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: {{ $.Values.volumeClaimTemplates.data.storage }}
  awsElasticBlockStore:
    fsType: ext4
    {{- with index $.Values.volumeClaimTemplates.data.volumeIds . }}
    volumeID: {{ . }} 
    {{- end }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ $.Values.volumeClaimTemplates.storageClassName  }}
  claimRef:
    namespace: {{ $.Release.Namespace }}
    name: data-axonserver-{{ . }}
{{ end }}

{{ if and ($.Values.volumeClaimTemplates.events.enabled) ($.Values.volumeClaimTemplates.events.volumeIds) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: events-axonserver-{{ . }}
  labels:
    identifier: events-axonserver-{{ . }}
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: {{ $.Values.volumeClaimTemplates.events.storage }}
  awsElasticBlockStore:
    fsType: ext4
    {{- with index $.Values.volumeClaimTemplates.events.volumeIds . }}
    volumeID: {{ . }} 
    {{- end }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ $.Values.volumeClaimTemplates.storageClassName  }}
  claimRef:
    namespace: {{ $.Release.Namespace }}
    name: events-axonserver-{{ . }}
{{ end }}

{{ if and ($.Values.volumeClaimTemplates.exts.enabled) ($.Values.volumeClaimTemplates.exts.volumeIds) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: exts-axonserver-{{ . }}
  labels:
    identifier: exts-axonserver-{{ . }}
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: {{ $.Values.volumeClaimTemplates.exts.storage }}
  awsElasticBlockStore:
    fsType: ext4
    {{- with index $.Values.volumeClaimTemplates.exts.volumeIds . }}
    volumeID: {{ . }} 
    {{- end }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ $.Values.volumeClaimTemplates.storageClassName  }}
  claimRef:
    namespace: {{ $.Release.Namespace }}
    name: exts-axonserver-{{ . }}
{{ end }}

{{ if and ($.Values.volumeClaimTemplates.plugins.enabled) ($.Values.volumeClaimTemplates.plugins.volumeIds) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: plugins-axonserver-{{ . }}
  labels:
    identifier: plugins-axonserver-{{ . }}
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: {{ $.Values.volumeClaimTemplates.plugins.storage }}
  awsElasticBlockStore:
    fsType: ext4
    {{- with index $.Values.volumeClaimTemplates.plugins.volumeIds . }}
    volumeID: {{ . }} 
    {{- end }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ $.Values.volumeClaimTemplates.storageClassName  }}
  claimRef:
    namespace: {{ $.Release.Namespace }}
    name: plugins-axonserver-{{ . }}
{{ end }}

{{ if and ($.Values.volumeClaimTemplates.snapshots.enabled) ($.Values.volumeClaimTemplates.snapshots.volumeIds) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: snapshots-axonserver-{{ . }}
  labels:
    identifier: snapshots-axonserver-{{ . }}
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: {{ $.Values.volumeClaimTemplates.snapshots.storage }}
  awsElasticBlockStore:
    fsType: ext4
    {{- with index $.Values.volumeClaimTemplates.snapshots.volumeIds . }}
    volumeID: {{ . }} 
    {{- end }}
  persistentVolumeReclaimPolicy: Retain
  storageClassName: {{ $.Values.volumeClaimTemplates.storageClassName  }}
  claimRef:
    namespace: {{ $.Release.Namespace }}
    name: snapshots-axonserver-{{ . }}
{{ end }}

{{- end }}
