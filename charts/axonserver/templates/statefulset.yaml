{{- range untilStep 0 (int .Values.statefulset.count) 1 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{$.Values.app.name}}-{{ . }}
  labels:
    app: {{$.Values.app.name}}
spec:
  podManagementPolicy: {{$.Values.statefulset.podManagementPolicy}}
  serviceName: {{$.Values.app.name}}-svc
  replicas: 1
  selector:
    matchLabels:
      app: {{$.Values.app.name}}
  template:
    metadata:
      labels:
        app: {{$.Values.app.name}}
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      nodeSelector:
      {{ if $.Values.aws.azs }}
        {{ with index $.Values.aws.azs . }}
        topology.kubernetes.io/zone: {{ . }}
        {{ end }} 
      {{ else }}
        {{ toYaml $.Values.nodeSelector | indent 8 -}}
      {{ end }} 
      containers:
      - name: {{$.Values.app.name}}
        image: {{$.Values.statefulset.container.image}}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: {{$.Values.resources.limits.cpu}}
            memory: {{$.Values.resources.limits.memory}}
          requests:
            cpu: {{$.Values.resources.requests.cpu}}
            memory: {{$.Values.resources.requests.cpu}}
        ports:
        - name: grpc
          containerPort: {{$.Values.service.ports.grpc}}
          protocol: TCP
        - name: gui
          containerPort: {{$.Values.service.ports.gui}}
          protocol: TCP
        {{if eq $.Values.app.platform "ee"}}
        env:
        {{- range $.Values.statefulset.env }}
        - name: {{ .name }}
          value: {{ .value }}
        {{- end }}
        - name: AXONIQ_LICENSE
          value: {{$.Values.statefulset.container.workdir }}/license/axoniq.license
        {{end}}
        volumeMounts:
        - name: log
          mountPath: {{$.Values.statefulset.container.workdir }}/log
        
        - name: data
          mountPath: {{$.Values.statefulset.container.workdir }}/data

        - name: events
          mountPath: {{$.Values.statefulset.container.workdir }}/events

        - name: exts
          mountPath: {{$.Values.statefulset.container.workdir }}/exts

        - name: plugins
          mountPath: {{$.Values.statefulset.container.workdir }}/plugins

        - name: snapshots
          mountPath: {{$.Values.statefulset.container.workdir }}/snapshots

        {{if eq $.Values.app.platform "ee"}}  
        - name: properties
          mountPath: {{$.Values.statefulset.container.workdir }}/config/axonserver.properties
          subPath: axonserver.properties
          readOnly: true
        - name: cluster-template
          mountPath: {{$.Values.statefulset.container.workdir }}/config/cluster-template.yaml
          subPath: cluster-template.yaml
          readOnly: true
        - name: system-token
          mountPath: {{$.Values.statefulset.container.workdir }}/security/axoniq.token
          subPath: axoniq.token
          readOnly: true
        - name: license
          mountPath: {{$.Values.statefulset.container.workdir }}/license/axoniq.license
          subPath: axoniq.license
          readOnly: true
        {{ if $.Values.axoniq.axonserver.recoveryFileBase64 }}
        - name: recovery-file
          mountPath: {{$.Values.statefulset.container.workdir }}/recovery.json
          subPath: recovery.json
        {{ end }}
        {{end}}

        readinessProbe:
          tcpSocket:
            port: {{ $.Values.service.ports.gui }}
          initialDelaySeconds: {{$.Values.statefulset.readiness.initialDelaySeconds}}
          periodSeconds: {{$.Values.statefulset.readiness.periodSeconds}}
          timeoutSeconds: {{$.Values.statefulset.readiness.timeoutSeconds}}
          failureThreshold: {{$.Values.statefulset.readiness.failureThreshold}}
        livenessProbe:
          tcpSocket:
            port: {{ $.Values.service.ports.gui }}
          initialDelaySeconds: {{$.Values.statefulset.liveness.initialDelaySeconds}}
          periodSeconds: {{$.Values.statefulset.liveness.periodSeconds}}
          timeoutSeconds: {{$.Values.statefulset.liveness.timeoutSeconds}}
          successThreshold: {{$.Values.statefulset.liveness.successThreshold}}
          failureThreshold: {{$.Values.statefulset.liveness.failureThreshold}}

      volumes:    
        {{- range $name, $v := $.Values.volumeClaimTemplates.claims }}
        - name: {{ $name }}
          {{ if $v.enabled }}
          persistentVolumeClaim: 
            claimName: {{ $name }}-{{ $.Values.app.name }}-{{ . }}
          {{ else }}
          emptyDir: {}
          {{ end }}
        {{- end }}

        {{if eq $.Values.app.platform "ee"}}  
        - name: properties
          secret:
            secretName: axonserver-properties
        - name: cluster-template
          secret:
            secretName: axonserver-cluster-template
        - name: system-token
          secret:
            secretName: axonserver-system-token
        - name: license
          secret:
            secretName: axonserver-license
        {{ if $.Values.axoniq.axonserver.recoveryFileBase64 }}    
        - name: recovery-file
          secret:
            secretName: axonserver-recovery-file
        {{ end }}
        {{end}}

  {{- range $k, $v := $.Values.volumeClaimTemplates.claims }}
  {{ if $v.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ $k }}-{{ $.Values.app.name }}
        namespace: {{ $.Release.Namespace }}
      spec:
        accessModes:
          {{ (toYaml $v.accessModes | nindent 10) }}
        storageClassName: {{ $v.storageClassName | default $.Values.volumeClaimTemplates.defaults.storageClassName }}
        resources:
          requests:
            storage: {{ $v.storage }}
  {{ end }}
  {{- end }}

{{- end }}